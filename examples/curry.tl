(define pair: (num num -> (bool -> num))
    (lambda (a: num b: num)
        (lambda (op: bool)
            (if op a b)
        )
    )
)
(define fst: ((bool -> num) -> num) (lambda (p: (bool -> num)) (p #t)))
(define snd: ((bool -> num) -> num) (lambda (p: (bool -> num)) (p #t)))
(define a: (bool -> num) (pair 2 3))
(define b: (bool -> num) (pair 54 334))
(define c: (bool -> num) (pair 9 32))
(+
    (fst a)
    (snd b)
    (* (snd a) 5)
    (/ (fst c) (snd b))
    (- (fst a) (snd b) (snd c))
    (/ (snd a) (fst b) (snd a))
)
